package dynamictimeserieschart;

import java.awt.Component;
import java.awt.BorderLayout;
import java.text.DecimalFormat;
import java.util.List;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import javax.swing.JButton;
import javax.swing.JFrame;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

public class CG extends javax.swing.JFrame {
    
//       / private final JFreeChart chart;
        boolean guiActive = true;
        boolean repeat=true;
  
    double[] arr = new double[10];
    
    
    public CG() {
        initComponents();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        computeButton = new javax.swing.JButton();
        MassField = new javax.swing.JTextField();
        WheelBaseField = new javax.swing.JTextField();
        CenterGravityField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        FrontEndField = new javax.swing.JTextField();
        MassReadingField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        ComputeField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        wheelRadiusField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(200, 300));

        computeButton.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        computeButton.setText("Compute");
        computeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                computeButtonActionPerformed(evt);
            }
        });

        MassField.setText("2000");
        MassField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MassFieldActionPerformed(evt);
            }
        });

        WheelBaseField.setText("2.44");
        WheelBaseField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WheelBaseFieldActionPerformed(evt);
            }
        });

        CenterGravityField.setText("1.52");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel5.setText("m(Mass)");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel6.setText("L(Wheel Base)");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel7.setText("b(Center Gravity) from rear axe");

        FrontEndField.setText("35");
        FrontEndField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FrontEndFieldActionPerformed(evt);
            }
        });

        MassReadingField.setText("1150");
        MassReadingField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MassReadingFieldActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel8.setText("H(Front End Vehicle Lifted)");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel9.setText("R(Mass Reading from Front End)");

        ComputeField.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N

        jButton1.setText("INFLATE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("DEFLATE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel1.setText("r(Wheel Radius)");

        wheelRadiusField.setText("30.5");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ComputeField, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(computeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MassField, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(WheelBaseField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(CenterGravityField, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(wheelRadiusField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(MassReadingField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel9))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(FrontEndField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(MassField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(FrontEndField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(MassReadingField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(WheelBaseField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(CenterGravityField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(wheelRadiusField, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 142, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ComputeField, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(computeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(61, 61, 61))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addGap(78, 78, 78))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void computeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_computeButtonActionPerformed
      
        double b = Double.parseDouble(CenterGravityField.getText());
        double H = Double.parseDouble(FrontEndField.getText());
        double L = Double.parseDouble(WheelBaseField.getText());
        double m = Double.parseDouble(MassField.getText());
        double R = Double.parseDouble(MassReadingField.getText());
        double r = Double.parseDouble(wheelRadiusField.getText());
        
 if(repeat){
      double  orig_b=b;
   double orig_H=H;
    double orig_L=L;
     double orig_m=m;
    double orig_R=R;
  double orig_r=r;
      
     double orig_tan=Math.atan(orig_H/orig_L);
      orig_tan=Math.round(orig_tan*100.0)/100.0;
      double orig_h=(orig_b-orig_L*(orig_R/orig_m)*orig_tan+orig_r*100);
      orig_h=Math.round(orig_h*100.0)/100.0;
      repeat=false;
      arr[7]=orig_h;
 }
       double tan = Math.atan(H/L);
       
       tan = Math.round(tan*100.0)/100.0;
       double h =(b-L*(R/m))*tan+r*100;
       
       h=Math.round(h*100.0)/100.0;
    // result = Math.round(result*100.000)/100.000;
        
        
        
        arr[0]= b;
        arr[1]=H;
        arr[2]=L;
        arr[3]=m;
        arr[4]=R;
        arr[5]=r;
        arr[6]=h;
        
        
        
        ComputeField.setText(h+"");
        
        JFrame Graph = new JFrame();
        Graph.setTitle("Center of Gravity Vehicle");
        Graph.setSize(600,400);
        Graph.setLayout(new BorderLayout());
        Graph.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        Graph.setLocationRelativeTo(null);
         
        XYSeries series = new XYSeries("Center of Inflated/Deflated Gravity Readings");
        XYSeries series2 = new XYSeries("Center of Gravity  Readings");
        XYSeriesCollection dataset =new XYSeriesCollection();
        dataset.addSeries(series);
        dataset.addSeries(series2);
        
        double stiva=h;
        JFreeChart chart = ChartFactory.createXYLineChart("Center of Weight Readings", "Time(seconds)", "Center of Weight", dataset);
        Graph.add(new ChartPanel(chart),BorderLayout.CENTER);
        
         Graph.revalidate();
         Graph.repaint();
         
         
        
        Thread thread = new Thread(){
            @Override public void run(){
                int x =0 ;
                while(x<10000){
                    try{
                    Thread.sleep(1000);
                    }catch(Exception e){
                        System.out.println("ERROR");
                    }
                    series.add(x++,arr[6]);
                    series2.add(x++,arr[7]);
                }
            }
        };
        
          thread.start();
        if(guiActive){
          Graph.setVisible(true);
            guiActive = false;
         
            
        }
        
        
        
      
  
   
        
    }//GEN-LAST:event_computeButtonActionPerformed

    private void FrontEndFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FrontEndFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FrontEndFieldActionPerformed

    private void WheelBaseFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WheelBaseFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_WheelBaseFieldActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
     double inflate= Double.parseDouble(wheelRadiusField.getText());
     inflate+=0.5;
     
     inflate=Math.round(inflate*100.0)/100.00;
     wheelRadiusField.setText(inflate+"");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        double deflate= Double.parseDouble(wheelRadiusField.getText());
     deflate-=0.5;
     
     deflate=Math.round(deflate*100.0)/100.00;
     wheelRadiusField.setText(deflate+"");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void MassReadingFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MassReadingFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MassReadingFieldActionPerformed

    private void MassFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MassFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MassFieldActionPerformed

    
    public double[] getArr(){
    return arr;
    };
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CG().setVisible(true);
               
            }
            
           
            
            
        });
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CenterGravityField;
    private javax.swing.JTextField ComputeField;
    private javax.swing.JTextField FrontEndField;
    private javax.swing.JTextField MassField;
    private javax.swing.JTextField MassReadingField;
    private javax.swing.JTextField WheelBaseField;
    private javax.swing.JButton computeButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField wheelRadiusField;
    // End of variables declaration//GEN-END:variables
}
    
